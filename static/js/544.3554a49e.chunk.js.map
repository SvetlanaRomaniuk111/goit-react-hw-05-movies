{"version":3,"file":"static/js/544.3554a49e.chunk.js","mappings":"sNAEaA,E,OAAeC,EAAAA,OAAa,CACvCC,QAAS,gCACTC,QAAS,CACPC,cACE,6NACFC,OAAQ,sBCLCC,EAAW,mCAAG,WAAMC,GAAN,yFACFP,EAAaQ,IAAID,GADf,uBACjBE,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD,wFC+BxB,IA5BmB,SAAC,GAAa,IAAXF,EAAU,EAAVA,IACpB,GAA6BG,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,aAAYC,GAAKY,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACvBL,EAAUK,GACVH,GAAa,EACd,GACF,GAAE,CAACV,KAEF,SAAC,IAAD,CAAYc,QAASL,EAArB,UACE,wBACGF,EAAOQ,KAAI,SAAAC,GAAE,OACZ,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAGE,IAClBC,MAAO,CAAEC,KAAMhB,EAAWC,GAF5B,SAIGW,EAAGK,eAAiBL,EAAGM,gBAAkBN,EAAGO,MAAQP,EAAGQ,SALnDR,EAAGE,GADA,OAarB,C,mCC3BD,IAJmB,SAAC,GAA2B,IAAzBJ,EAAwB,EAAxBA,QAASW,EAAe,EAAfA,SAC7B,OAAOX,GAAU,oCAAiB,8BAAGW,GACtC,C,mDCSD,UATa,WACX,OACE,iBAAKC,UAAU,OAAf,WACE,4CACA,SAAC,IAAD,CAAY1B,IAAK,yBAGtB,C","sources":["api/index.js","api/movies.js","components/MoviesList.jsx","hoc/LoadingHoc.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const baseInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MjM0ZGU0ZDBmY2Q2ZDMyMTU4NTZiOWNiY2FjOTIxMiIsInN1YiI6IjY1MjE0OTU4NzQ1MDdkMDBhYzQ5NjM1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4tSzuvDckrKfx97Li1MJc--OVLo4Rhp1vN70xjG_Y0w',\n    accept: 'application/json',\n  },\n});\n","import { baseInstance } from 'api';\n\nexport const fetchMovies = async url => {\n  const { data } = await baseInstance.get(url);\n  return data;\n};\n","import { fetchMovies } from 'api/movies';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport LoadingHoc from '../hoc/LoadingHoc';\n\nconst MoviesList = ({ url }) => {\n  const { pathname, search } = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchMovies(url).then(({ results }) => {\n      setMovies(results);\n      setIsLoading(false);\n    });\n  }, [url]);\n  return (\n    <LoadingHoc loading={isLoading}>\n      <ul>\n        {movies.map(el => (\n          <li key={el.id}>\n            <NavLink\n              to={`/movies/${el.id}`}\n              state={{ from: pathname + search }}\n            >\n              {el.original_name || el.original_title || el.name || el.title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </LoadingHoc>\n  );\n};\n\nexport default MoviesList;\n","const LoadingHoc = ({ loading, children }) => {\n  return loading ? <p>Loading</p> : <>{children}</>;\n};\n\nexport default LoadingHoc;\n","import MoviesList from 'components/MoviesList';\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <h2>Trending Today</h2>\n      <MoviesList url={'trending/movie/day'} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["baseInstance","axios","baseURL","headers","Authorization","accept","fetchMovies","url","get","data","useLocation","pathname","search","useState","movies","setMovies","isLoading","setIsLoading","useEffect","then","results","loading","map","el","to","id","state","from","original_name","original_title","name","title","children","className"],"sourceRoot":""}