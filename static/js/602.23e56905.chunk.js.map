{"version":3,"file":"static/js/602.23e56905.chunk.js","mappings":"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","sources":["api/index.js","api/movies.js","hoc/LoadingHoc.jsx","components/BackButton.jsx","pages/MoviePage/AditionalInfo.jsx","webpack://react-homework-template/./src/pages/MoviePage/style.module.css?5498","pages/MoviePage/Cast.jsx","pages/MoviePage/Review.jsx","pages/MoviePage/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const baseInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MjM0ZGU0ZDBmY2Q2ZDMyMTU4NTZiOWNiY2FjOTIxMiIsInN1YiI6IjY1MjE0OTU4NzQ1MDdkMDBhYzQ5NjM1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4tSzuvDckrKfx97Li1MJc--OVLo4Rhp1vN70xjG_Y0w',\n    accept: 'application/json',\n  },\n});\n","import { baseInstance } from 'api';\n\nexport const fetchMovies = async url => {\n  const { data } = await baseInstance.get(url);\n  return data;\n};\n","const LoadingHoc = ({ loading, children }) => {\n  return loading ? <p>Loading</p> : <>{children}</>;\n};\n\nexport default LoadingHoc;\n","import { useNavigate } from 'react-router-dom';\nconst BackButton = () => {\n  const history = useNavigate();\n  const from = localStorage.getItem('from');\n\n  return (\n    <button className=\"btn btn-secondary m-3\" onClick={() => history(from)}>\n      &#x2190; Go back\n    </button>\n  );\n};\n\nexport default BackButton;\n","import { NavLink, useParams } from 'react-router-dom';\n\nconst AditionalInfo = () => {\n  const { id } = useParams();\n  const from = localStorage.getItem('from');\n\n  return (\n    <div>\n      <h4>Aditional Information</h4>\n      <ul>\n        <li>\n          <NavLink to={`/movies/${id}/cast`} state={{ from: from }}>\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to={`/movies/${id}/reviews`} state={{ from: from }}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AditionalInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"style_cast__0azeS\"};","import LoadingHoc from 'hoc/LoadingHoc';\nimport css from './style.module.css';\n\nconst { fetchMovies } = require('api/movies');\nconst { useState } = require('react');\nconst { useEffect } = require('react');\n\nconst Cast = ({ id }) => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchMovies(`movie/${id}/credits`).then(({ cast }) => {\n      setIsLoading(false);\n      setCast(cast);\n    });\n  }, [id]);\n  return (\n    <div>\n      <LoadingHoc loading={isLoading}>\n        {cast.map(e => {\n          return (\n            <div key={e.id}>\n              <div>\n                <img\n                  className={css.cast}\n                  src={`https://image.tmdb.org/t/p/w500${e.profile_path}`}\n                  alt={e.name}\n                />\n              </div>\n              <span>‚óè {e.name}</span>\n              <span>Character: {e.character}</span>\n            </div>\n          );\n        })}\n      </LoadingHoc>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { fetchMovies } from 'api/movies';\nimport LoadingHoc from 'hoc/LoadingHoc';\nimport React, { useEffect, useState } from 'react';\n\nconst Review = ({ id }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetchMovies(`movie/${id}/reviews`).then(({ results }) => {\n      setIsLoading(false);\n      setReviews(results);\n    });\n  }, [id]);\n\n  return (\n    <div>\n      <LoadingHoc loading={isLoading}>\n        {reviews &&\n          (!reviews.length ? (\n            <h5>We don't have any reviews for this movie.</h5>\n          ) : (\n            reviews.map(e => {\n              return (\n                <div key={e.id}>\n                  <h3>{e.author}</h3>\n                  <p>{e.content}</p>\n                </div>\n              );\n            })\n          ))}\n      </LoadingHoc>\n    </div>\n  );\n};\n\nexport default Review;\n","import { fetchMovies } from 'api/movies';\nimport BackButton from 'components/BackButton';\nimport LoadingHoc from 'hoc/LoadingHoc';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport AditionalInfo from './AditionalInfo';\nimport Cast from './Cast';\nimport Review from './Review';\n\nconst MoviePage = () => {\n  const { pathname } = useLocation();\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [filmData, setFilmData] = useState({});\n  const [filmGenres, setFilmGenres] = useState([]);\n  const [isShowCast, setIsShowCast] = useState(false);\n  const [isShowReview, setIsShowReview] = useState(true);\n\n  useEffect(() => {\n    fetchMovies(`movie/${id}`).then(data => {\n      setFilmData(data);\n      setFilmGenres(data.genres);\n      setIsLoading(false);\n    });\n  }, [id]);\n\n  useEffect(() => {\n    if (pathname === `/movies/${id}/cast`) {\n      setIsShowCast(true);\n      setIsShowReview(false);\n    } else if (pathname === `/movies/${id}/reviews`) {\n      setIsShowCast(false);\n      setIsShowReview(true);\n    } else {\n      setIsShowCast(false);\n      setIsShowReview(false);\n    }\n  }, [pathname, id]);\n\n  return (\n    <LoadingHoc loading={isLoading}>\n      <div>\n        <BackButton />\n        <div>\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${filmData.backdrop_path}`}\n              alt={filmData.title}\n            />\n          </div>\n          <div>\n            <div>\n              <h1>\n                {filmData.title}({new Date(filmData.release_date).getFullYear()}\n                )\n              </h1>\n              <span>User Score: {Math.round(filmData.vote_average * 10)}%</span>\n            </div>\n            <div>\n              <h3>Overview</h3>\n              <span>{filmData.overview}</span>\n            </div>\n            <div>\n              <h3>Genres</h3>\n              <div>\n                {filmGenres.map(e => (\n                  <span key={e.id}>{e.name}</span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <AditionalInfo />\n\n        {isShowCast ? (\n          <Cast id={id} />\n        ) : isShowReview ? (\n          <Review id={id} />\n        ) : null}\n      </div>\n    </LoadingHoc>\n  );\n};\n\nexport default MoviePage;\n"],"names":["baseInstance","axios","baseURL","headers","Authorization","accept","fetchMovies","url","get","data","loading","children","history","useNavigate","from","localStorage","getItem","className","onClick","id","useParams","to","state","require","useState","useEffect","cast","setCast","isLoading","setIsLoading","then","LoadingHoc","map","e","css","src","profile_path","alt","name","character","reviews","setReviews","results","length","author","content","pathname","useLocation","filmData","setFilmData","filmGenres","setFilmGenres","isShowCast","setIsShowCast","isShowReview","setIsShowReview","genres","backdrop_path","title","Date","release_date","getFullYear","Math","round","vote_average","overview"],"sourceRoot":""}